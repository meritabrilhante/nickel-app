// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             String        @id @default(uuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  first_name     String
  last_name      String
  email          String        @unique
  password       String
  institute      String?
  course         String?
  user_type      String?
  user_situation userSituation
  description    String?

  //tokens       Token[]
  //sessions     Session[]
  //rooms        Rooms[]
  //room_user    Room_user[]
  //awnser       Awnser[]
  //discussion   Discussion[]
  //user_emblems User_emblems[]
}

enum userSituation {
  USER
  ADMIN
}

model Session {
  id                 String    @id @default(uuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  //user   User?   @relation(fields: [userId], references: [id])
  //userId String?
}

model Token {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  expiresAt   DateTime
  sentTo      String

  //user   User   @relation(fields: [userId], references: [id])
  //userId String

  @@unique([hashedToken, type])
}

model Report {
  id          String   @id @default(uuid())
  type        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Room {
  id          String     @id @default(uuid())
  title       String
  description String
  institute   String
  visibility  visibility
  password    String?
  createdAt   DateTime   @default(now())

  //room_manager Room_manager[]
  //room_report  Room_report[]
  //room_user    Room_user[]

  //user     User     @relation(fields: [creator], references: [id])
  //creator  String
  //category Category @relation(fields: [category], references: [id])
  //category Int
}

enum visibility {
  PUBLIC
  PRIVATE
}

model Category {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  //discussion Discussion[]
  //room       Room[]
}
