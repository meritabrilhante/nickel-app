// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")

  tokens    Token[]
  sessions  Session[]
  user_type String
}

model Session {
  id                 String    @id @default(uuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Token {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  expiresAt   DateTime
  sentTo      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([hashedToken, type])
}

model Report {
  id          String   @id @default(uuid())
  type        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Discussion {
  id                   String   @id @default(uuid())
  title                String
  subject              String?
  question_description String?
  createdAt            DateTime @default(now())
  belong_in_room       Int
  status               Enum

  awnser              Awnser[]
  category            Category[]
  discussion_reaction Discussion_reaction[]
  discussion_report   Discussion_report[]
  User                User[]

  user           User   @relation(fields: [subject_author], references: [id])
  subject_author String

  user2      User   @relation(fields: [created_by], references: [id])
  created_by String

  room    Room @relation(fields: [room_id], references: [id])
  room_id Int
}

enum status {
  ARCHIVED
  ACTIVE
}
